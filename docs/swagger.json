{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "AquaTrack app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of AquaTrack app"
  },
  "servers": [
    {
      "url": "https://project-digitalteam-backend.onrender.com/"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth endpoints."
    },
    {
      "name": "Users",
      "description": "Users endpoints."
    },
    {
      "name": "Water",
      "description": "Water endpoints."
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User registration",
        "operationId": "userRegister",
        "description": "Register a new user with email and password",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "user@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "format": "password",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "operationId": "userLogin",
        "description": "Log in a user with email and password",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "user@example.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "format": "password",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "token",
                    "id"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in!"
                    },
                    "token": {
                      "type": "string",
                      "example": "Bearer token_string"
                    },
                    "id": {
                      "type": "string",
                      "description": "User's ID",
                      "example": "65ca67e7ae7f10c88b598384"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/users/reset-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset password",
        "description": "Resets the user's password using the token sent via email.",
        "operationId": "resetPassword",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Password reset token sent to the user's email."
                  },
                  "newPassword": {
                    "type": "string",
                    "format": "password",
                    "description": "New password for the user."
                  }
                },
                "required": [
                  "token",
                  "newPassword"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/refresh-token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh the authentication token",
        "description": "Obtain a new access token and refresh token",
        "operationId": "refreshAuthToken",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "description": "The refresh token to exchange for new tokens",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                  }
                },
                "required": [
                  "refreshToken"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tokens successfully refreshed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "New access token",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                    },
                    "refreshToken": {
                      "type": "string",
                      "description": "New refresh token",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Log out of the application",
        "description": "Invalidate the current session and tokens",
        "operationId": "logoutUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully logged out"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "summary": "Get current user information",
        "description": "Retrieve information about the currently authenticated user.",
        "operationId": "getCurrentUserInfo",
        "responses": {
          "200": {
            "description": "User information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "User ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "User's name"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "description": "User's email"
                    },
                    "gender": {
                      "type": "string",
                      "enum": [
                        "male",
                        "female",
                        "other"
                      ],
                      "description": "User's gender"
                    },
                    "weight": {
                      "type": "integer",
                      "description": "User's weight in kilograms"
                    },
                    "activeTime": {
                      "type": "integer",
                      "description": "User's active time in sports in minutes"
                    },
                    "dailyWaterGoal": {
                      "type": "integer",
                      "description": "User's daily water goal in milliliters"
                    },
                    "avatar": {
                      "type": "string",
                      "format": "uri",
                      "description": "URL to the user's avatar"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "summary": "Update user information",
        "description": "Update details of the currently authenticated user, including name, email, gender, weight, active time on sports, daily water goal, and avatar.",
        "operationId": "updateUserInformation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Joi Buben"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john.doe@example.com"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "male",
                      "female",
                      "other"
                    ],
                    "description": "Gender of the user",
                    "example": "male"
                  },
                  "weight": {
                    "type": "integer",
                    "format": "float",
                    "description": "User`s weight in kg",
                    "example": "75.5"
                  },
                  "activeTime": {
                    "type": "integer",
                    "format": "float",
                    "description": "Active time for sports in hours",
                    "example": "1.5"
                  },
                  "dailyWaterGoal": {
                    "type": "integer",
                    "format": "float",
                    "description": "Daily water intake goal in milliliters",
                    "example": 2
                  },
                  "avatar": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL of the user's avatar",
                    "example": "https://example.com/avatar.png"
                  }
                },
                "required": [
                  "name",
                  "email",
                  "gender",
                  "weight",
                  "activeTime",
                  "dailyWaterGoal"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/avatar": {
      "patch": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "summary": "Update user avatar",
        "description": "Update details of the currently authenticated user avatar.",
        "operationId": "updateUserAvatar",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL of the user's avatar",
                    "example": "https://example.com/avatar.png"
                  }
                },
                "required": [
                  "avatar"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/count": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get total number of registered users",
        "description": "Retrieve the total number of registered users in the application.",
        "operationId": "getTotalNumberOfUsers",
        "security": [],
        "responses": {
          "200": {
            "description": "Total number of registered users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalUsers": {
                      "type": "integer",
                      "description": "Total number of registered users",
                      "example": 250
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/add": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Water"
        ],
        "summary": "Add a new water record",
        "description": "Add a new record of consumed water",
        "operationId": "addWaterRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "User ID",
                    "example": "65ca67e7ae7f10c88b598384"
                  },
                  "amount": {
                    "type": "integer",
                    "description": "Amount of water consumed (in ml)",
                    "example": 500
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of consumption",
                    "example": "2024-07-19"
                  }
                },
                "required": [
                  "userId",
                  "amount",
                  "date"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successfully created"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water/daily": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Water"
        ],
        "summary": "Get daily water consumption",
        "description": "Retrieve the amount of water consumed by the user for a specific day",
        "operationId": "getDailyWaterConsumption",
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date of consumption",
            "example": "2024-07-19"
          }
        ],
        "responses": {
          "200": {
            "description": "Daily water consumption data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalAmount": {
                      "type": "integer",
                      "description": "Total amount of water consumed (in ml)",
                      "example": 1500
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water/monthly": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Water"
        ],
        "summary": "Get monthly water consumption",
        "description": "Retrieve the amount of water consumed by the user for a specific month",
        "operationId": "getMonthlyWaterConsumption",
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user",
            "example": "65ca67e7ae7f10c88b598384"
          },
          {
            "in": "query",
            "name": "month",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Month of consumption",
            "example": "2024-07"
          }
        ],
        "responses": {
          "200": {
            "description": "Monthly water consumption data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalAmount": {
                      "type": "integer",
                      "description": "Total amount of water consumed (in ml)",
                      "example": 30000
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water/{id}": {
      "patch": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Water"
        ],
        "summary": "Update a water record",
        "description": "Update an existing record of consumed water",
        "operationId": "updateWaterRecord",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the water record",
            "example": "65ca67e7ae7f10c88b598384"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "Amount of water consumed (in ml)",
                    "example": 600
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of consumption",
                    "example": "2024-07-19"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successfully updated"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Water"
        ],
        "summary": "Delete a water record",
        "description": "Delete a record of consumed water by ID",
        "operationId": "deleteWaterRecord",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the water record",
            "example": "65ca67e7ae7f10c88b598384"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "name",
          "password",
          "gender"
        ],
        "properties": {
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "Joe Buben"
          },
          "password": {
            "description": "User's password",
            "type": "string",
            "example": "123456789"
          },
          "gender": {
            "description": "User's gender identity",
            "type": "string",
            "enum": [
              "man",
              "woman"
            ],
            "example": "woman"
          },
          "photo": {
            "description": "Link to user's photo",
            "oneOf": [
              {
                "type": "string",
                "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
              },
              {
                "type": "null",
                "example": null
              }
            ]
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad request, invalid token or password",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad request, invalid data, token or password"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "User not found or token not found or expired",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  }
}